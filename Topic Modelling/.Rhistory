data$Boy_scout_soci_high[data$soci=="High"]<-data$Boy_scout[data$soci=="High"]
View(data)
head(a)
head(c)
c<-rnorm(10000)
length(c)=length(a)
length(c)==length(a)
wilcox.test(a,c)
x<-c(12,23)
y<-c(3,12)
c(x,y)
for(i in 1:10){}
for(i in 1:10){
s=i+1}
s
table(dietitian$State.Code.of.the.Provider)/population
library("plotly")
setwd("~/Desktop/HealthyBytes")
dietitian = read.csv("dietitian_cms_2015.csv")
levels(dietitian$State.Code.of.the.Provider)
length(levels(dietitian$State.Code.of.the.Provider))
table(dietitian$State.Code.of.the.Provider)
n=dim(dietitian)[1]
percentage = table(dietitian$State.Code.of.the.Provider)/n
percentage = round(percentage*100,2)
dietitian_cms=data.frame(percentage)
colnames(dietitian_cms) = c("state","percentage")
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~percentage, locations = ~state,
color = ~percentage, colors = 'Blues'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
library("plotly")
setwd("~/Desktop/HealthyBytes")
dietitian = read.csv("dietitian_cms_2015.csv")
levels(dietitian$State.Code.of.the.Provider)
length(levels(dietitian$State.Code.of.the.Provider))
table(dietitian$State.Code.of.the.Provider)
n=dim(dietitian)[1]
percentage = table(dietitian$State.Code.of.the.Provider)/n
percentage = round(percentage*100,2)
dietitian_cms=data.frame(percentage)
colnames(dietitian_cms) = c("state","percentage")
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~percentage, locations = ~state,
color = ~percentage, colors = 'Blues'
) %>%
colorbar(title = "Paid Percentage") %>%
layout(
title = 'CMS Marketing Percentage',
geo = g
)
p
sort(c(1,4,3))
order(c(1,4,3))
dietitian_cms
population = c(741894,4863300,2988248,6931071,39250017,5540545,3576452,7288000,952065,20612439,10310371,1428557,3134693,1683140, 12801539,6633053, 2907289,4436974,4681666,6811779,6016447,1331479,9928301,5519952,6093000,2988726,1042520,10146788,757952,1907116,1334795,8944469,2081015,2940058,19745289,11646273,3923561,4093465,12784227,1056426,4961119,865454,6651194,27862596,3051217,8411808,624594,7288000,5778708,1831102,585501)
dietitian_cms$population = population
max_p=max(table(dietitian$State.Code.of.the.Provider)/population)
min_p=min(table(dietitian$State.Code.of.the.Provider)/population)
a=table(dietitian$State.Code.of.the.Provider)/population
scale_01=function(x){
return((x-min_p)/(max_p-min_p))
}
a=round(sapply(a,scale_01),2)
dietitian_cms$normalized_based_pop = a
dietitian_cms$normalized_based_pop=round(100*dietitian_cms$normalized_based_pop/sum(dietitian_cms$normalized_based_pop),2)
dietitian_cms$hover = with(dietitian_cms,paste("State's population:",population))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~normalized_based_pop, text = ~hover,locations = ~state,
color = ~normalized_based_pop, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
dietitian_cms$order = order(dietitian_cms$normalized_based_pop)
dim(dietitian_cms)
dietitian_cms$rank = 52-dietitian_cms$order
dietitian_cms$rank
dietitian_cms
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~normalized_based_pop, text = ~hover,locations = ~state,
color = ~rank, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~rank, text = ~hover,locations = ~state,
color = ~rank, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~rank, text = ~hover,locations = ~state,
color = ~orfer, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~rank, text = ~hover,locations = ~state,
color = ~order, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
dietitian_cms
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~order, text = ~hover,locations = ~state,
color = ~order, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
text = ~hover,locations = ~state,
color = ~order, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
dietitian_cms$normalized_based_pop=round(100*dietitian_cms$normalized_based_pop/sum(dietitian_cms$normalized_based_pop),2)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~order, text = ~hover,locations = ~state,
color = ~order, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
dietitian_cms$hover = with(dietitian_cms,paste("Rank",rank, '<br>',"State's population:",population))
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~order, text = ~hover,locations = ~state,
color = ~order, colors = 'Reds'
) %>%
colorbar(title = "Paid Percentage<br>of Charged") %>%
layout(
title = 'CMS',
geo = g
)
p
?add_trace
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
"Fruits", total.fruits, "Veggies", total.veggies,
"<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(df, locationmode = 'USA-states') %>%
add_trace(
z = ~total.exports, text = ~hover, locations = ~code,
color = ~total.exports, colors = 'Purples'
) %>%
colorbar(title = "Millions USD") %>%
layout(
title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
geo = g
)
p
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~order, text = ~hover,locations = ~state,
color = ~order, colors = 'Reds'
) %>%
layout(
title = 'CMS',
geo = g
)
p
population = c(741894,4863300,2988248,6931071,39250017,5540545,3576452,7288000,952065,20612439,10310371,1428557,3134693,1683140, 12801539,6633053, 2907289,4436974,4681666,6811779,6016447,1331479,9928301,5519952,6093000,2988726,1042520,10146788,757952,1907116,1334795,8944469,2081015,2940058,19745289,11646273,3923561,4093465,12784227,1056426,4961119,865454,6651194,27862596,3051217,8411808,624594,7288000,5778708,1831102,585501)
dietitian_cms$population = population
max_p=max(table(dietitian$State.Code.of.the.Provider)/population)
min_p=min(table(dietitian$State.Code.of.the.Provider)/population)
a=table(dietitian$State.Code.of.the.Provider)/population
scale_01=function(x){
return((x-min_p)/(max_p-min_p))
}
a=round(sapply(a,scale_01),2)
dietitian_cms$normalized_based_pop = a
dietitian_cms$normalized_based_pop=round(100*dietitian_cms$normalized_based_pop/sum(dietitian_cms$normalized_based_pop),2)
dietitian_cms$order = order(dietitian_cms$normalized_based_pop)
dietitian_cms$rank = 52-dietitian_cms$order
dietitian_cms$hover = with(dietitian_cms,paste("Rank:",rank, '<br>',"State's population:",population))
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~order, text = ~hover,locations = ~state,
color = ~order, colors = 'Reds'
) %>%
layout(
title = 'CMS Marketing Share based on Population',
geo = g
)
p
library("plotly")
setwd("~/Desktop/HealthyBytes")
dietitian = read.csv("dietitian_cms_2015.csv")
n=dim(dietitian)[1]
percentage = table(dietitian$State.Code.of.the.Provider)/n
percentage = round(percentage*100,2)
dietitian_cms=data.frame(percentage)
colnames(dietitian_cms) = c("state","percentage")
l <- list(color = toRGB("white"), width = 2)
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
p <- plot_geo(dietitian_cms, locationmode = 'USA-states') %>%
add_trace(
z = ~percentage, locations = ~state,
color = ~percentage, colors = 'Blues'
) %>%
colorbar(title = "Paid Percentage") %>%
layout(
title = 'CMS Marketing Percentage',
geo = g
)
p
log(290/170)
log(290/170-1)
290/170
290/170-1
log(0.7058824)
std(15,50)
sd(15,50)
sd(c(15,50))
400*1.08
400*1.08-100*1.01
1+0.2
1.02^3
1.061208*0.95
1.008148^0.25
name<-c("A","B","C","A","B","A","C")
rate<-c(1,2,3,4,2,3,1)
length(name)
length(rate)
?seq
seq(7)
name<-c("A","B","C","A","B","A","C")
rate1<-c(1,2,3,4,2,3,1)
rate2<-c(12,12,13,14,12,13,11)
id<-seq(7)
df<-data.frame(name,id,rate1,rate2)
aggregate(c(df$rate1,df$rate2),by=list(df$name),mean)
aggregate(c(df$rate1,df$rate2),by=list(df$name),mean())
aggregate(df$rate1,by=list(df$name),mean)
name<-c("A","B","C","A","B","A","C")
rate1<-c(1,2,3,4,2,3,1)
rate2<-c(12,12,13,14,12,13,11)
id<-seq(7)
df<-data.frame(name,id,rate1,rate2)
aggregate(df$rate1,by=list(df$name),mean)
name<-c("A","B","C","A","B","A","C")
rate1<-c(1,2,3,4,2,3,1)
rate2<-c(12,12,13,14,12,13,11)
id<-seq(7)
df<-data.frame(name,id,rate1,rate2)
aggregate(.~df$rate1+df$rate2,by=list(df$name),mean)
name<-c("A","B","C","A","B","A","C")
rate1<-c(1,2,3,4,2,3,1)
rate2<-c(12,12,13,14,12,13,11)
id<-seq(7)
df<-data.frame(name,id,rate1,rate2)
aggregate(list(df$rate1,df$rate2),by=list(df$name),mean)
?ave
ave(c(1,2))
4*0.47
2-0.06
1.94/sqrt(0.47)
pnorm(2.829781)
2-0.24
1.76/sqrt(1.88)
pnorm(1.83)
0.06+0.06+0.6
2*0.47
log(1.3)
qnorm((2-0.24)/sqrt(1.88))
pnorm((2-0.24)/sqrt(1.88))
(2-0.24)/sqrt(1.88)
library("xgboost")
install("xgboost")
install.packages("xgboost")
library("xgboost")
x = seq(1,10)
y = log(x, base = 2)
plot(x,y)
y = x^(1/4)
plot(x,y)
y = log(x, base = 2)
plot(x,y)
x = seq(1,100)
y1 = log(x, base = 2)
y2 = x^(1/4)
plot(x,y1)
line(x,y2)
plot(x,y2)
plot(x,y1)
plot(x, y1) # first plot
par(new = TRUE)
plot(x, y2, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(z)))
plot(x, y1) # first plot
par(new = TRUE)
plot(x, y2, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(y2)))
mtext("y2", side=4, line=3)
x = seq(1,10000)
plot(x, y1) # first plot
x = seq(1,10000)
y1 = log(x, base = 2)
y2 = y2 = x^(1/4)
plot(x, y1) # first plot
par(new = TRUE)
plot(x, y2, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(y2)))
mtext("y2", side=4, line=3)
y2[-1]
y2[length(ye)]
y2[length(y2)]
y1[length(y1)]
x = seq(1,1000000)
y1 = log(x, base = 2)
y2 = y2 = x^(1/4)
plot(x, y1) # first plot
par(new = TRUE)
plot(x, y2, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(y2)))
mtext("y2", side=4, line=3)
x = seq(1,10000)
y1 = log(x, base = 2)^2
y2 =  x
plot(x, y1) # first plot
par(new = TRUE)
plot(x, y2, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(y2)))
mtext("y2", side=4, line=3)
x = seq(1,10000)
y1 = log(x, base = 2)^2
y2 =  x^1/4
plot(x, y1) # first plot
par(new = TRUE)
plot(x, y2, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(y2)))
mtext("y2", side=4, line=3)
x = seq(1,10000)
y1 = log(log(n, base =2),base=2)
x = seq(1,10000)
y1 = log(log(x, base =2),base=2)
y2 =  log(x, base=10)
plot(x, y1) # first plot
par(new = TRUE)
plot(x, y2, type = "l", axes = FALSE, bty = "n", xlab = "", ylab = "")
axis(side=4, at = pretty(range(y2)))
mtext("y2", side=4, line=3)
sum(y2>y1)
80%18
80%%18
a
for i in seq(1,10){}
for i in seq(1,10){
for (i in seq(1,10)){
a[i] =0
}
a = c()
for (i in seq(1,10)){
a[i] =0
}
a = list()
a
a = list()
for (i in seq(1,10)){
a[i] =0
}
a
LAD?
1=1
?LDA
??LDA
install.packages('LDA')
install.packages('lda')
library('lda')
if require("xtable") install.packages('lda')
require("xtable")
if (!require("xtable")) install.packages('lda')
if (!require("lda")) install.packages('lda')
setwd("~/Desktop/SFL/Topic Modelling")
f = read.documents("cleaned_sentence.txt")
f
f = read.table("cleaned_sentence.txt")
f
library(readtext)
if (!require("readtext")) install.packages('readtext')
f = readtext("cleaned_sentence.txt")
setwd("~/Downloads")
getwd()
packages.used=c("RColorBrewer","ggplot2movies","shape","ggplot2","gridExtra")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library(RColorBrewer)
library(ggplot2movies)
library(shape)
library(ggplot2)
library(gridExtra)
data<-read.csv(file="StatePop.csv",header=T,stringsAsFactors = FALSE)
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:ggplot2movies", unload=TRUE)
library("ggplot2movies")
detach("package:ggplot2movies", unload=TRUE)
library("ggplot2movies", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
setwd("~/Desktop/SFL/Topic Modelling")
if (!require("lda")) install.packages('lda')
if (!require("readtext")) install.packages('readtext')
library("readtext")
f = readtext("cleaned_sentence.txt")
f
LDA(F)
LDA(f)
library('LDA')
library('LDA')
library('lda')
LDA(f)
